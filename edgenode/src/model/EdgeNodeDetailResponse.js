/**
 * Edge Node API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EdgeNodeModules from './EdgeNodeModules';
import NodeGroup from './NodeGroup';

/**
 * The EdgeNodeDetailResponse model module.
 * @module model/EdgeNodeDetailResponse
 * @version 1.0.0
 */
class EdgeNodeDetailResponse {
    /**
     * Constructs a new <code>EdgeNodeDetailResponse</code>.
     * @alias module:model/EdgeNodeDetailResponse
     * @param groups {Array.<module:model/NodeGroup>} 
     * @param hasServices {Boolean} 
     * @param hashId {String} 
     * @param id {Number} 
     * @param modules {module:model/EdgeNodeModules} 
     * @param name {String} 
     */
    constructor(groups, hasServices, hashId, id, modules, name) { 
        
        EdgeNodeDetailResponse.initialize(this, groups, hasServices, hashId, id, modules, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groups, hasServices, hashId, id, modules, name) { 
        obj['groups'] = groups;
        obj['has_services'] = hasServices;
        obj['hash_id'] = hashId;
        obj['id'] = id;
        obj['modules'] = modules;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>EdgeNodeDetailResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EdgeNodeDetailResponse} obj Optional instance to populate.
     * @return {module:model/EdgeNodeDetailResponse} The populated <code>EdgeNodeDetailResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EdgeNodeDetailResponse();

            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [NodeGroup]);
            }
            if (data.hasOwnProperty('has_services')) {
                obj['has_services'] = ApiClient.convertToType(data['has_services'], 'Boolean');
            }
            if (data.hasOwnProperty('hash_id')) {
                obj['hash_id'] = ApiClient.convertToType(data['hash_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('modules')) {
                obj['modules'] = EdgeNodeModules.constructFromObject(data['modules']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EdgeNodeDetailResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EdgeNodeDetailResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EdgeNodeDetailResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groups'])) {
                throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
            }
            // validate the optional field `groups` (array)
            for (const item of data['groups']) {
                NodeGroup.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['hash_id'] && !(typeof data['hash_id'] === 'string' || data['hash_id'] instanceof String)) {
            throw new Error("Expected the field `hash_id` to be a primitive type in the JSON string but got " + data['hash_id']);
        }
        // validate the optional field `modules`
        if (data['modules']) { // data not null
          EdgeNodeModules.validateJSON(data['modules']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

EdgeNodeDetailResponse.RequiredProperties = ["groups", "has_services", "hash_id", "id", "modules", "name"];

/**
 * @member {Array.<module:model/NodeGroup>} groups
 */
EdgeNodeDetailResponse.prototype['groups'] = undefined;

/**
 * @member {Boolean} has_services
 */
EdgeNodeDetailResponse.prototype['has_services'] = undefined;

/**
 * @member {String} hash_id
 */
EdgeNodeDetailResponse.prototype['hash_id'] = undefined;

/**
 * @member {Number} id
 */
EdgeNodeDetailResponse.prototype['id'] = undefined;

/**
 * @member {module:model/EdgeNodeModules} modules
 */
EdgeNodeDetailResponse.prototype['modules'] = undefined;

/**
 * @member {String} name
 */
EdgeNodeDetailResponse.prototype['name'] = undefined;






export default EdgeNodeDetailResponse;

