/**
 * Edge Node API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceResponse from './ServiceResponse';

/**
 * The ServiceResponseWithTotal model module.
 * @module model/ServiceResponseWithTotal
 * @version 1.0.0
 */
class ServiceResponseWithTotal {
    /**
     * Constructs a new <code>ServiceResponseWithTotal</code>.
     * @alias module:model/ServiceResponseWithTotal
     * @param services {Array.<module:model/ServiceResponse>} 
     * @param total {Number} 
     */
    constructor(services, total) { 
        
        ServiceResponseWithTotal.initialize(this, services, total);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, services, total) { 
        obj['services'] = services;
        obj['total'] = total;
    }

    /**
     * Constructs a <code>ServiceResponseWithTotal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceResponseWithTotal} obj Optional instance to populate.
     * @return {module:model/ServiceResponseWithTotal} The populated <code>ServiceResponseWithTotal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceResponseWithTotal();

            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], [ServiceResponse]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceResponseWithTotal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceResponseWithTotal</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceResponseWithTotal.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['services']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['services'])) {
                throw new Error("Expected the field `services` to be an array in the JSON data but got " + data['services']);
            }
            // validate the optional field `services` (array)
            for (const item of data['services']) {
                ServiceResponse.validateJSON(item);
            };
        }

        return true;
    }


}

ServiceResponseWithTotal.RequiredProperties = ["services", "total"];

/**
 * @member {Array.<module:model/ServiceResponse>} services
 */
ServiceResponseWithTotal.prototype['services'] = undefined;

/**
 * @member {Number} total
 */
ServiceResponseWithTotal.prototype['total'] = undefined;






export default ServiceResponseWithTotal;

