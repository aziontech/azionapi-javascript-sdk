/**
 * Domain API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DomainApi);
  }
}(this, function(expect, DomainApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DomainApi.DomainEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DomainEntity', function() {
    it('should create an instance of DomainEntity', function() {
      // uncomment below and update the code to test DomainEntity
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be.a(DomainApi.DomainEntity);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property cnames (base name: "cnames")', function() {
      // uncomment below and update the code to test the property cnames
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property cnameAccessOnly (base name: "cname_access_only")', function() {
      // uncomment below and update the code to test the property cnameAccessOnly
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "is_active")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property edgeApplicationId (base name: "edge_application_id")', function() {
      // uncomment below and update the code to test the property edgeApplicationId
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property digitalCertificateId (base name: "digital_certificate_id")', function() {
      // uncomment below and update the code to test the property digitalCertificateId
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property isMtlsEnabled (base name: "is_mtls_enabled")', function() {
      // uncomment below and update the code to test the property isMtlsEnabled
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property mtlsTrustedCaCertificateId (base name: "mtls_trusted_ca_certificate_id")', function() {
      // uncomment below and update the code to test the property mtlsTrustedCaCertificateId
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property mtlsVerification (base name: "mtls_verification")', function() {
      // uncomment below and update the code to test the property mtlsVerification
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property crlList (base name: "crl_list")', function() {
      // uncomment below and update the code to test the property crlList
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

    it('should have the property domainName (base name: "domain_name")', function() {
      // uncomment below and update the code to test the property domainName
      //var instance = new DomainApi.DomainEntity();
      //expect(instance).to.be();
    });

  });

}));
