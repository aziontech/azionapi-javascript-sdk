/**
 * Web Application Firewall API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WAFSensitivityChoices from './WAFSensitivityChoices';

/**
 * The SingleWAF model module.
 * @module model/SingleWAF
 * @version 2.0.0
 */
class SingleWAF {
    /**
     * Constructs a new <code>SingleWAF</code>.
     * @alias module:model/SingleWAF
     */
    constructor() { 
        
        SingleWAF.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SingleWAF</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SingleWAF} obj Optional instance to populate.
     * @return {module:model/SingleWAF} The populated <code>SingleWAF</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SingleWAF();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('sql_injection')) {
                obj['sql_injection'] = ApiClient.convertToType(data['sql_injection'], 'Boolean');
            }
            if (data.hasOwnProperty('sql_injection_sensitivity')) {
                obj['sql_injection_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['sql_injection_sensitivity']);
            }
            if (data.hasOwnProperty('remote_file_inclusion')) {
                obj['remote_file_inclusion'] = ApiClient.convertToType(data['remote_file_inclusion'], 'Boolean');
            }
            if (data.hasOwnProperty('remote_file_inclusion_sensitivity')) {
                obj['remote_file_inclusion_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['remote_file_inclusion_sensitivity']);
            }
            if (data.hasOwnProperty('directory_traversal')) {
                obj['directory_traversal'] = ApiClient.convertToType(data['directory_traversal'], 'Boolean');
            }
            if (data.hasOwnProperty('directory_traversal_sensitivity')) {
                obj['directory_traversal_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['directory_traversal_sensitivity']);
            }
            if (data.hasOwnProperty('cross_site_scripting')) {
                obj['cross_site_scripting'] = ApiClient.convertToType(data['cross_site_scripting'], 'Boolean');
            }
            if (data.hasOwnProperty('cross_site_scripting_sensitivity')) {
                obj['cross_site_scripting_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['cross_site_scripting_sensitivity']);
            }
            if (data.hasOwnProperty('evading_tricks')) {
                obj['evading_tricks'] = ApiClient.convertToType(data['evading_tricks'], 'Boolean');
            }
            if (data.hasOwnProperty('evading_tricks_sensitivity')) {
                obj['evading_tricks_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['evading_tricks_sensitivity']);
            }
            if (data.hasOwnProperty('file_upload')) {
                obj['file_upload'] = ApiClient.convertToType(data['file_upload'], 'Boolean');
            }
            if (data.hasOwnProperty('file_upload_sensitivity')) {
                obj['file_upload_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['file_upload_sensitivity']);
            }
            if (data.hasOwnProperty('unwanted_access')) {
                obj['unwanted_access'] = ApiClient.convertToType(data['unwanted_access'], 'Boolean');
            }
            if (data.hasOwnProperty('unwanted_access_sensitivity')) {
                obj['unwanted_access_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['unwanted_access_sensitivity']);
            }
            if (data.hasOwnProperty('identified_attack')) {
                obj['identified_attack'] = ApiClient.convertToType(data['identified_attack'], 'Boolean');
            }
            if (data.hasOwnProperty('identified_attack_sensitivity')) {
                obj['identified_attack_sensitivity'] = WAFSensitivityChoices.constructFromObject(data['identified_attack_sensitivity']);
            }
            if (data.hasOwnProperty('bypass_addresses')) {
                obj['bypass_addresses'] = ApiClient.convertToType(data['bypass_addresses'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SingleWAF</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SingleWAF</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bypass_addresses'])) {
            throw new Error("Expected the field `bypass_addresses` to be an array in the JSON data but got " + data['bypass_addresses']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
SingleWAF.prototype['id'] = undefined;

/**
 * Identification name for WAF Rule Set.
 * @member {String} name
 */
SingleWAF.prototype['name'] = undefined;

/**
 * @member {module:model/SingleWAF.ModeEnum} mode
 */
SingleWAF.prototype['mode'] = undefined;

/**
 * @member {Boolean} active
 */
SingleWAF.prototype['active'] = undefined;

/**
 * @member {Boolean} sql_injection
 */
SingleWAF.prototype['sql_injection'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} sql_injection_sensitivity
 */
SingleWAF.prototype['sql_injection_sensitivity'] = undefined;

/**
 * @member {Boolean} remote_file_inclusion
 */
SingleWAF.prototype['remote_file_inclusion'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} remote_file_inclusion_sensitivity
 */
SingleWAF.prototype['remote_file_inclusion_sensitivity'] = undefined;

/**
 * @member {Boolean} directory_traversal
 */
SingleWAF.prototype['directory_traversal'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} directory_traversal_sensitivity
 */
SingleWAF.prototype['directory_traversal_sensitivity'] = undefined;

/**
 * @member {Boolean} cross_site_scripting
 */
SingleWAF.prototype['cross_site_scripting'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} cross_site_scripting_sensitivity
 */
SingleWAF.prototype['cross_site_scripting_sensitivity'] = undefined;

/**
 * @member {Boolean} evading_tricks
 */
SingleWAF.prototype['evading_tricks'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} evading_tricks_sensitivity
 */
SingleWAF.prototype['evading_tricks_sensitivity'] = undefined;

/**
 * @member {Boolean} file_upload
 */
SingleWAF.prototype['file_upload'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} file_upload_sensitivity
 */
SingleWAF.prototype['file_upload_sensitivity'] = undefined;

/**
 * @member {Boolean} unwanted_access
 */
SingleWAF.prototype['unwanted_access'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} unwanted_access_sensitivity
 */
SingleWAF.prototype['unwanted_access_sensitivity'] = undefined;

/**
 * @member {Boolean} identified_attack
 */
SingleWAF.prototype['identified_attack'] = undefined;

/**
 * @member {module:model/WAFSensitivityChoices} identified_attack_sensitivity
 */
SingleWAF.prototype['identified_attack_sensitivity'] = undefined;

/**
 * @member {Array.<String>} bypass_addresses
 */
SingleWAF.prototype['bypass_addresses'] = undefined;





/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
SingleWAF['ModeEnum'] = {

    /**
     * value: "blocking"
     * @const
     */
    "blocking": "blocking",

    /**
     * value: "counting"
     * @const
     */
    "counting": "counting"
};



export default SingleWAF;

