/**
 * Web Application Firewall API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebApplicationFirewallApi);
  }
}(this, function(expect, WebApplicationFirewallApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateNewWAFRulesetRequest', function() {
    it('should create an instance of CreateNewWAFRulesetRequest', function() {
      // uncomment below and update the code to test CreateNewWAFRulesetRequest
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be.a(WebApplicationFirewallApi.CreateNewWAFRulesetRequest);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property sqlInjection (base name: "sql_injection")', function() {
      // uncomment below and update the code to test the property sqlInjection
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property sqlInjectionSensitivity (base name: "sql_injection_sensitivity")', function() {
      // uncomment below and update the code to test the property sqlInjectionSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property remoteFileInclusion (base name: "remote_file_inclusion")', function() {
      // uncomment below and update the code to test the property remoteFileInclusion
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property remoteFileInclusionSensitivity (base name: "remote_file_inclusion_sensitivity")', function() {
      // uncomment below and update the code to test the property remoteFileInclusionSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property directoryTraversal (base name: "directory_traversal")', function() {
      // uncomment below and update the code to test the property directoryTraversal
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property directoryTraversalSensitivity (base name: "directory_traversal_sensitivity")', function() {
      // uncomment below and update the code to test the property directoryTraversalSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property crossSiteScripting (base name: "cross_site_scripting")', function() {
      // uncomment below and update the code to test the property crossSiteScripting
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property crossSiteScriptingSensitivity (base name: "cross_site_scripting_sensitivity")', function() {
      // uncomment below and update the code to test the property crossSiteScriptingSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property evadingTricks (base name: "evading_tricks")', function() {
      // uncomment below and update the code to test the property evadingTricks
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property evadingTricksSensitivity (base name: "evading_tricks_sensitivity")', function() {
      // uncomment below and update the code to test the property evadingTricksSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property fileUpload (base name: "file_upload")', function() {
      // uncomment below and update the code to test the property fileUpload
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property fileUploadSensitivity (base name: "file_upload_sensitivity")', function() {
      // uncomment below and update the code to test the property fileUploadSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property unwantedAccess (base name: "unwanted_access")', function() {
      // uncomment below and update the code to test the property unwantedAccess
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property unwantedAccessSensitivity (base name: "unwanted_access_sensitivity")', function() {
      // uncomment below and update the code to test the property unwantedAccessSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property identifiedAttack (base name: "identified_attack")', function() {
      // uncomment below and update the code to test the property identifiedAttack
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property identifiedAttackSensitivity (base name: "identified_attack_sensitivity")', function() {
      // uncomment below and update the code to test the property identifiedAttackSensitivity
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

    it('should have the property bypassAddresses (base name: "bypass_addresses")', function() {
      // uncomment below and update the code to test the property bypassAddresses
      //var instance = new WebApplicationFirewallApi.CreateNewWAFRulesetRequest();
      //expect(instance).to.be();
    });

  });

}));
