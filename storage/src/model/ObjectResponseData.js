/**
 * Object Storage
 * REST API OpenAPI documentation for the Object Storage
 *
 * The version of the OpenAPI document: 1.0.0 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ObjectResponseData model module.
 * @module model/ObjectResponseData
 * @version 1.0.0 (v1)
 */
class ObjectResponseData {
    /**
     * Constructs a new <code>ObjectResponseData</code>.
     * @alias module:model/ObjectResponseData
     * @param objectKey {String} 
     */
    constructor(objectKey) { 
        
        ObjectResponseData.initialize(this, objectKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectKey) { 
        obj['object_key'] = objectKey;
    }

    /**
     * Constructs a <code>ObjectResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectResponseData} obj Optional instance to populate.
     * @return {module:model/ObjectResponseData} The populated <code>ObjectResponseData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectResponseData();

            if (data.hasOwnProperty('object_key')) {
                obj['object_key'] = ApiClient.convertToType(data['object_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectResponseData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectResponseData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjectResponseData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['object_key'] && !(typeof data['object_key'] === 'string' || data['object_key'] instanceof String)) {
            throw new Error("Expected the field `object_key` to be a primitive type in the JSON string but got " + data['object_key']);
        }

        return true;
    }


}

ObjectResponseData.RequiredProperties = ["object_key"];

/**
 * @member {String} object_key
 */
ObjectResponseData.prototype['object_key'] = undefined;






export default ObjectResponseData;

