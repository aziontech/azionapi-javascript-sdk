/**
 * Object Storage
 * REST API OpenAPI documentation for the Object Storage
 *
 * The version of the OpenAPI document: 1.0.0 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The S3CredentialCreate model module.
 * @module model/S3CredentialCreate
 * @version 1.0.0 (v1)
 */
class S3CredentialCreate {
    /**
     * Constructs a new <code>S3CredentialCreate</code>.
     * @alias module:model/S3CredentialCreate
     */
    constructor() { 
        
        S3CredentialCreate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>S3CredentialCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3CredentialCreate} obj Optional instance to populate.
     * @return {module:model/S3CredentialCreate} The populated <code>S3CredentialCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3CredentialCreate();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], ['String']);
            }
            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = ApiClient.convertToType(data['bucket'], 'String');
            }
            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = ApiClient.convertToType(data['expiration_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3CredentialCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3CredentialCreate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['capabilities'])) {
            throw new Error("Expected the field `capabilities` to be an array in the JSON data but got " + data['capabilities']);
        }
        // ensure the json data is a string
        if (data['bucket'] && !(typeof data['bucket'] === 'string' || data['bucket'] instanceof String)) {
            throw new Error("Expected the field `bucket` to be a primitive type in the JSON string but got " + data['bucket']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
S3CredentialCreate.prototype['name'] = undefined;

/**
 * @member {Array.<String>} capabilities
 */
S3CredentialCreate.prototype['capabilities'] = undefined;

/**
 * @member {String} bucket
 */
S3CredentialCreate.prototype['bucket'] = undefined;

/**
 * @member {Date} expiration_date
 */
S3CredentialCreate.prototype['expiration_date'] = undefined;






export default S3CredentialCreate;

