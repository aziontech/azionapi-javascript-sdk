/**
 * Edge Application API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOriginsRequest from '../model/CreateOriginsRequest';
import OriginsIdResponse from '../model/OriginsIdResponse';
import OriginsResponse from '../model/OriginsResponse';
import PatchOriginsRequest from '../model/PatchOriginsRequest';
import UpdateOriginsRequest from '../model/UpdateOriginsRequest';

/**
* EdgeApplicationsOrigins service.
* @module api/EdgeApplicationsOriginsApi
* @version 2.0.0
*/
export default class EdgeApplicationsOriginsApi {

    /**
    * Constructs a new EdgeApplicationsOriginsApi. 
    * @alias module:api/EdgeApplicationsOriginsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the edgeApplicationsEdgeApplicationIdOriginsGet operation.
     * @callback module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /edge_applications/{edge_application_id}/origins
     * @param {Number} edgeApplicationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [page] 
     * @param {Number} [pageSize] 
     * @param {String} [filter] 
     * @param {String} [orderBy] 
     * @param {String} [sort] 
     * @param {String} [accept] 
     * @param {module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginsResponse}
     */
    edgeApplicationsEdgeApplicationIdOriginsGet(edgeApplicationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'edgeApplicationId' is set
      if (edgeApplicationId === undefined || edgeApplicationId === null) {
        throw new Error("Missing the required parameter 'edgeApplicationId' when calling edgeApplicationsEdgeApplicationIdOriginsGet");
      }

      let pathParams = {
        'edge_application_id': edgeApplicationId
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'filter': opts['filter'],
        'order_by': opts['orderBy'],
        'sort': opts['sort']
      };
      let headerParams = {
        'Accept': opts['accept']
      };
      let formParams = {
      };

      let authNames = ['tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json; version=3'];
      let returnType = OriginsResponse;
      return this.apiClient.callApi(
        '/edge_applications/{edge_application_id}/origins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the edgeApplicationsEdgeApplicationIdOriginsOriginKeyDelete operation.
     * @callback module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /edge_applications/{edge_application_id}/origins/{origin_id}
     * @param {Number} edgeApplicationId 
     * @param {String} originKey 
     * @param {Object} opts Optional parameters
     * @param {String} [accept] The id of the Origin that you plan to delete.
     * @param {module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    edgeApplicationsEdgeApplicationIdOriginsOriginKeyDelete(edgeApplicationId, originKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'edgeApplicationId' is set
      if (edgeApplicationId === undefined || edgeApplicationId === null) {
        throw new Error("Missing the required parameter 'edgeApplicationId' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyDelete");
      }
      // verify the required parameter 'originKey' is set
      if (originKey === undefined || originKey === null) {
        throw new Error("Missing the required parameter 'originKey' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyDelete");
      }

      let pathParams = {
        'edge_application_id': edgeApplicationId,
        'origin_key': originKey
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': opts['accept']
      };
      let formParams = {
      };

      let authNames = ['tokenAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/edge_applications/{edge_application_id}/origins/{origin_key}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the edgeApplicationsEdgeApplicationIdOriginsOriginKeyGet operation.
     * @callback module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginsIdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /edge_applications/{edge_application_id}/origins/{origin_key}
     * @param {Number} edgeApplicationId 
     * @param {String} originKey 
     * @param {Object} opts Optional parameters
     * @param {String} [accept] The id of the Origin that you plan to query.
     * @param {module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginsIdResponse}
     */
    edgeApplicationsEdgeApplicationIdOriginsOriginKeyGet(edgeApplicationId, originKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'edgeApplicationId' is set
      if (edgeApplicationId === undefined || edgeApplicationId === null) {
        throw new Error("Missing the required parameter 'edgeApplicationId' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyGet");
      }
      // verify the required parameter 'originKey' is set
      if (originKey === undefined || originKey === null) {
        throw new Error("Missing the required parameter 'originKey' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyGet");
      }

      let pathParams = {
        'edge_application_id': edgeApplicationId,
        'origin_key': originKey
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': opts['accept']
      };
      let formParams = {
      };

      let authNames = ['tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json; version=3'];
      let returnType = OriginsIdResponse;
      return this.apiClient.callApi(
        '/edge_applications/{edge_application_id}/origins/{origin_key}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the edgeApplicationsEdgeApplicationIdOriginsOriginKeyPatch operation.
     * @callback module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginsIdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /edge_applications/:edge_application_id:/origins/:origin_id:
     * @param {Number} edgeApplicationId 
     * @param {String} originKey 
     * @param {Object} opts Optional parameters
     * @param {String} [accept] 
     * @param {String} [contentType] The type of coding used in the Body (application/json). <br>  Example: Content-Type: application/json
     * @param {module:model/PatchOriginsRequest} [patchOriginsRequest] 
     * @param {module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginsIdResponse}
     */
    edgeApplicationsEdgeApplicationIdOriginsOriginKeyPatch(edgeApplicationId, originKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['patchOriginsRequest'];
      // verify the required parameter 'edgeApplicationId' is set
      if (edgeApplicationId === undefined || edgeApplicationId === null) {
        throw new Error("Missing the required parameter 'edgeApplicationId' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyPatch");
      }
      // verify the required parameter 'originKey' is set
      if (originKey === undefined || originKey === null) {
        throw new Error("Missing the required parameter 'originKey' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyPatch");
      }

      let pathParams = {
        'edge_application_id': edgeApplicationId,
        'origin_key': originKey
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      let formParams = {
      };

      let authNames = ['tokenAuth'];
      let contentTypes = ['application/json; version=3'];
      let accepts = ['application/json; version=3'];
      let returnType = OriginsIdResponse;
      return this.apiClient.callApi(
        '/edge_applications/{edge_application_id}/origins/{origin_key}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the edgeApplicationsEdgeApplicationIdOriginsOriginKeyPut operation.
     * @callback module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginsIdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /edge_applications/{edge_application_id}/origins/{origin_id}
     * @param {Number} edgeApplicationId 
     * @param {String} originKey 
     * @param {Object} opts Optional parameters
     * @param {String} [accept] 
     * @param {String} [contentType] The type of coding used in the Body (application/json). <br>  Example: Content-Type: application/json
     * @param {module:model/UpdateOriginsRequest} [updateOriginsRequest] 
     * @param {module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsOriginKeyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginsIdResponse}
     */
    edgeApplicationsEdgeApplicationIdOriginsOriginKeyPut(edgeApplicationId, originKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOriginsRequest'];
      // verify the required parameter 'edgeApplicationId' is set
      if (edgeApplicationId === undefined || edgeApplicationId === null) {
        throw new Error("Missing the required parameter 'edgeApplicationId' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyPut");
      }
      // verify the required parameter 'originKey' is set
      if (originKey === undefined || originKey === null) {
        throw new Error("Missing the required parameter 'originKey' when calling edgeApplicationsEdgeApplicationIdOriginsOriginKeyPut");
      }

      let pathParams = {
        'edge_application_id': edgeApplicationId,
        'origin_key': originKey
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      let formParams = {
      };

      let authNames = ['tokenAuth'];
      let contentTypes = ['application/json; version=3'];
      let accepts = ['application/json; version=3'];
      let returnType = OriginsIdResponse;
      return this.apiClient.callApi(
        '/edge_applications/{edge_application_id}/origins/{origin_key}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the edgeApplicationsEdgeApplicationIdOriginsPost operation.
     * @callback module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginsIdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /edge_applications/{edge_application_id}/origins
     * @param {Number} edgeApplicationId 
     * @param {Object} opts Optional parameters
     * @param {String} [accept] 
     * @param {String} [contentType] The type of coding used in the Body (application/json). <br>  Example: Content-Type: application/json
     * @param {module:model/CreateOriginsRequest} [createOriginsRequest] 
     * @param {module:api/EdgeApplicationsOriginsApi~edgeApplicationsEdgeApplicationIdOriginsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginsIdResponse}
     */
    edgeApplicationsEdgeApplicationIdOriginsPost(edgeApplicationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['createOriginsRequest'];
      // verify the required parameter 'edgeApplicationId' is set
      if (edgeApplicationId === undefined || edgeApplicationId === null) {
        throw new Error("Missing the required parameter 'edgeApplicationId' when calling edgeApplicationsEdgeApplicationIdOriginsPost");
      }

      let pathParams = {
        'edge_application_id': edgeApplicationId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      let formParams = {
      };

      let authNames = ['tokenAuth'];
      let contentTypes = ['application/json; version=3'];
      let accepts = ['application/json; version=3'];
      let returnType = OriginsIdResponse;
      return this.apiClient.callApi(
        '/edge_applications/{edge_application_id}/origins', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
