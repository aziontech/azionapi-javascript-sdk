/**
 * Edge Application API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RulesEngineBehavior from './RulesEngineBehavior';
import RulesEngineCriteria from './RulesEngineCriteria';

/**
 * The UpdateRulesEngineRequest model module.
 * @module model/UpdateRulesEngineRequest
 * @version 2.0.0
 */
class UpdateRulesEngineRequest {
    /**
     * Constructs a new <code>UpdateRulesEngineRequest</code>.
     * @alias module:model/UpdateRulesEngineRequest
     * @param name {String} 
     * @param criteria {Array.<Array.<module:model/RulesEngineCriteria>>} 
     * @param behaviors {Array.<module:model/RulesEngineBehavior>} 
     */
    constructor(name, criteria, behaviors) { 
        
        UpdateRulesEngineRequest.initialize(this, name, criteria, behaviors);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, criteria, behaviors) { 
        obj['name'] = name;
        obj['criteria'] = criteria;
        obj['behaviors'] = behaviors;
    }

    /**
     * Constructs a <code>UpdateRulesEngineRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateRulesEngineRequest} obj Optional instance to populate.
     * @return {module:model/UpdateRulesEngineRequest} The populated <code>UpdateRulesEngineRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateRulesEngineRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('criteria')) {
                obj['criteria'] = ApiClient.convertToType(data['criteria'], [[RulesEngineCriteria]]);
            }
            if (data.hasOwnProperty('behaviors')) {
                obj['behaviors'] = ApiClient.convertToType(data['behaviors'], [RulesEngineBehavior]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateRulesEngineRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateRulesEngineRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateRulesEngineRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['criteria'])) {
            throw new Error("Expected the field `criteria` to be an array in the JSON data but got " + data['criteria']);
        }
        if (data['behaviors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['behaviors'])) {
                throw new Error("Expected the field `behaviors` to be an array in the JSON data but got " + data['behaviors']);
            }
            // validate the optional field `behaviors` (array)
            for (const item of data['behaviors']) {
                RulesEngineBehavior.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateRulesEngineRequest.RequiredProperties = ["name", "criteria", "behaviors"];

/**
 * @member {String} name
 */
UpdateRulesEngineRequest.prototype['name'] = undefined;

/**
 * @member {Array.<Array.<module:model/RulesEngineCriteria>>} criteria
 */
UpdateRulesEngineRequest.prototype['criteria'] = undefined;

/**
 * @member {Array.<module:model/RulesEngineBehavior>} behaviors
 */
UpdateRulesEngineRequest.prototype['behaviors'] = undefined;






export default UpdateRulesEngineRequest;

