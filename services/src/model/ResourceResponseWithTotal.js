/**
 * Services API
 * Azion Services
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceResponse from './ResourceResponse';

/**
 * The ResourceResponseWithTotal model module.
 * @module model/ResourceResponseWithTotal
 * @version 2.0.0
 */
class ResourceResponseWithTotal {
    /**
     * Constructs a new <code>ResourceResponseWithTotal</code>.
     * @alias module:model/ResourceResponseWithTotal
     * @param resources {Array.<module:model/ResourceResponse>} 
     * @param total {Number} 
     */
    constructor(resources, total) { 
        
        ResourceResponseWithTotal.initialize(this, resources, total);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resources, total) { 
        obj['resources'] = resources;
        obj['total'] = total;
    }

    /**
     * Constructs a <code>ResourceResponseWithTotal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceResponseWithTotal} obj Optional instance to populate.
     * @return {module:model/ResourceResponseWithTotal} The populated <code>ResourceResponseWithTotal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceResponseWithTotal();

            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], [ResourceResponse]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceResponseWithTotal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceResponseWithTotal</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceResponseWithTotal.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['resources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resources'])) {
                throw new Error("Expected the field `resources` to be an array in the JSON data but got " + data['resources']);
            }
            // validate the optional field `resources` (array)
            for (const item of data['resources']) {
                ResourceResponse.validateJSON(item);
            };
        }

        return true;
    }


}

ResourceResponseWithTotal.RequiredProperties = ["resources", "total"];

/**
 * @member {Array.<module:model/ResourceResponse>} resources
 */
ResourceResponseWithTotal.prototype['resources'] = undefined;

/**
 * @member {Number} total
 */
ResourceResponseWithTotal.prototype['total'] = undefined;






export default ResourceResponseWithTotal;

