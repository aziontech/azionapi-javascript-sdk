/**
 * Digital Certificates API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateCSRRequest from '../model/CreateCSRRequest';
import DC201 from '../model/DC201';
import DC400 from '../model/DC400';
import DC403 from '../model/DC403';

/**
* CreateCSR service.
* @module api/CreateCSRApi
* @version 2.0.0
*/
export default class CreateCSRApi {

    /**
    * Constructs a new CreateCSRApi. 
    * @alias module:api/CreateCSRApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCSR operation.
     * @callback module:api/CreateCSRApi~createCSRCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DC201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an encrypted Certificate Request with Azion, which can then be sent for signing to a CA
     * @param {module:model/CreateCSRRequest} createCSRRequest 
     * @param {module:api/CreateCSRApi~createCSRCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DC201}
     */
    createCSR(createCSRRequest, callback) {
      let postBody = createCSRRequest;
      // verify the required parameter 'createCSRRequest' is set
      if (createCSRRequest === undefined || createCSRRequest === null) {
        throw new Error("Missing the required parameter 'createCSRRequest' when calling createCSR");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['tokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json; version=3'];
      let returnType = DC201;
      return this.apiClient.callApi(
        '/digital_certificates/csr', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
