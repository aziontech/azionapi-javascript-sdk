/**
 * Edge Firewall API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BehaviorsArgument from './BehaviorsArgument';

/**
 * The Behaviors model module.
 * @module model/Behaviors
 * @version 2.0.0
 */
class Behaviors {
    /**
     * Constructs a new <code>Behaviors</code>.
     * @alias module:model/Behaviors
     */
    constructor() { 
        
        Behaviors.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Behaviors</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Behaviors} obj Optional instance to populate.
     * @return {module:model/Behaviors} The populated <code>Behaviors</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Behaviors();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('argument')) {
                obj['argument'] = BehaviorsArgument.constructFromObject(data['argument']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Behaviors</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Behaviors</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `argument`
        if (data['argument']) { // data not null
          BehaviorsArgument.validateJSON(data['argument']);
        }

        return true;
    }


}



/**
 * @member {module:model/Behaviors.NameEnum} name
 */
Behaviors.prototype['name'] = undefined;

/**
 * @member {module:model/BehaviorsArgument} argument
 */
Behaviors.prototype['argument'] = undefined;





/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
Behaviors['NameEnum'] = {

    /**
     * value: "deny"
     * @const
     */
    "deny": "deny",

    /**
     * value: "drop"
     * @const
     */
    "drop": "drop",

    /**
     * value: "set_rate_limit"
     * @const
     */
    "set_rate_limit": "set_rate_limit",

    /**
     * value: "set_waf_ruleset"
     * @const
     */
    "set_waf_ruleset": "set_waf_ruleset",

    /**
     * value: "run_function"
     * @const
     */
    "run_function": "run_function",

    /**
     * value: "tag_event"
     * @const
     */
    "tag_event": "tag_event"
};



export default Behaviors;

