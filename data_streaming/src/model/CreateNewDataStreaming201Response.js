/**
 * Data Streaming - OpenAPI
 * The Data Streaming API allows you to manage your existing data streamings and templates. Data Streaming allows you to feed your stream processing, SIEM, and big data platforms with the event logs from your applications on Azion in real time. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateCustomDataStreamingResponse from './CreateCustomDataStreamingResponse';
import CreateDataStreamingResponse from './CreateDataStreamingResponse';
import PostCustomDataStreamingResponse from './PostCustomDataStreamingResponse';

/**
 * The CreateNewDataStreaming201Response model module.
 * @module model/CreateNewDataStreaming201Response
 * @version 1.0.0
 */
class CreateNewDataStreaming201Response {
    /**
     * Constructs a new <code>CreateNewDataStreaming201Response</code>.
     * @alias module:model/CreateNewDataStreaming201Response
     * @param {(module:model/CreateCustomDataStreamingResponse|module:model/CreateDataStreamingResponse)} instance The actual instance to initialize CreateNewDataStreaming201Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CreateDataStreamingResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CreateDataStreamingResponse.validateJSON(instance); // throw an exception if no match
                // create CreateDataStreamingResponse from JS object
                this.actualInstance = CreateDataStreamingResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CreateDataStreamingResponse
            errorMessages.push("Failed to construct CreateDataStreamingResponse: " + err)
        }

        try {
            if (typeof instance === "CreateCustomDataStreamingResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CreateCustomDataStreamingResponse.validateJSON(instance); // throw an exception if no match
                // create CreateCustomDataStreamingResponse from JS object
                this.actualInstance = CreateCustomDataStreamingResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CreateCustomDataStreamingResponse
            errorMessages.push("Failed to construct CreateCustomDataStreamingResponse: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CreateNewDataStreaming201Response` with oneOf schemas CreateCustomDataStreamingResponse, CreateDataStreamingResponse. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CreateNewDataStreaming201Response` with oneOf schemas CreateCustomDataStreamingResponse, CreateDataStreamingResponse. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CreateNewDataStreaming201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNewDataStreaming201Response} obj Optional instance to populate.
     * @return {module:model/CreateNewDataStreaming201Response} The populated <code>CreateNewDataStreaming201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CreateNewDataStreaming201Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>CreateCustomDataStreamingResponse</code>, <code>CreateDataStreamingResponse</code>.
     * @return {(module:model/CreateCustomDataStreamingResponse|module:model/CreateDataStreamingResponse)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CreateCustomDataStreamingResponse</code>, <code>CreateDataStreamingResponse</code>.
     * @param {(module:model/CreateCustomDataStreamingResponse|module:model/CreateDataStreamingResponse)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CreateNewDataStreaming201Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CreateNewDataStreaming201Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CreateNewDataStreaming201Response} An instance of CreateNewDataStreaming201Response.
     */
    static fromJSON = function(json_string){
        return CreateNewDataStreaming201Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {Array.<module:model/PostCustomDataStreamingResponse>} results
 */
CreateNewDataStreaming201Response.prototype['results'] = undefined;

/**
 * @member {Number} schema_version
 */
CreateNewDataStreaming201Response.prototype['schema_version'] = undefined;


CreateNewDataStreaming201Response.OneOf = ["CreateCustomDataStreamingResponse", "CreateDataStreamingResponse"];

export default CreateNewDataStreaming201Response;

